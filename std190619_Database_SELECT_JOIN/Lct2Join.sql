--conn to hr

--inner join
--Ansi SQL 문법
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID IS NULL;

SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES ORDER BY DEPARTMENT_ID;

--Oracle 문법
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.JOB_ID, J.JOB_TITLE
FROM EMPLOYEES E,DEPARTMENTS D, JOBS J WHERE E.EMPLOYEE_ID = 147 AND E.JOB_ID = J.JOB_ID AND E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--cross join
--ansi SQL 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E CROSS JOIN DEPARTMENTS D ;
--Oracle 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E ,DEPARTMENTS D ;

--full outer join
--ansi SQL
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID --WHERE E.DEPARTMENT_ID IS NULL OR D.DEPARTMENT_ID IS NULL;

--left outer join
--ansi SQL
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--Oracle
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E , DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+); -- + 기호가 없는 쪽이 주인공입니다 :)

SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E , DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+)
    AND E.DEPARTMENT_ID IS NULL;
    
-- right outer join은 left 반대

--self join
--ansi SQL
SELECT A.EMPLOYEE_ID, A.FIRST_NAME, B.EMPLOYEE_ID, B.FIRST_NAME 
FROM EMPLOYEES A, EMPLOYEES B   -- A:매니저번호추출 B:실제매니저 정보 추출
WHERE A.MANAGER_ID = B.EMPLOYEE_ID --A의 매니저번호가 B의 사원번호랑 일치하는 튜플만 꺼내라
ORDER BY B.FIRST_NAME;

SELECT COUNT(B.EMPLOYEE_ID), B.FIRST_NAME
FROM EMPLOYEES A, EMPLOYEES B
WHERE A.MANAGER_ID = B.EMPLOYEE_ID
GROUP BY B.FIRST_NAME
ORDER BY B.FIRST_NAME;

--계층형 구조
SELECT A.EMPLOYEE_ID, A.FIRST_NAME "사원", A.MANAGER_ID "사원의 상사", B.EMPLOYEE_ID, B.FIRST_NAME "상사"
FROM EMPLOYEES A, EMPLOYEES B
WHERE A.MANAGER_ID = B.EMPLOYEE_ID(+)
CONNECT BY PRIOR A.MANAGER_ID = A.EMPLOYEE_ID; --상향식 계층구조

SELECT A.EMPLOYEE_ID, A.FIRST_NAME "사원", A.MANAGER_ID "사원의 상사", B.EMPLOYEE_ID, B.FIRST_NAME "상사"
FROM EMPLOYEES A, EMPLOYEES B
WHERE A.MANAGER_ID = B.EMPLOYEE_ID(+)
CONNECT BY A.MANAGER_ID = PRIOR A.EMPLOYEE_ID; --하향식 계층구조